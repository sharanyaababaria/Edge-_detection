pip install opencv-python


from skimage.io import imread
from matplotlib.pyplot import imshow
from matplotlib.pyplot import plot,subplot
import matplotlib.pyplot as plt
import cv2
import numpy as np
plt.style.use('seaborn')


butterfly = cv2.imread('butterfly.jpg')
imshow(butterfly)


image1 = cv2.imread('butterfly.jpg', cv2.IMREAD_GRAYSCALE)


# converting image into rgb format

image_colour = cv2.cvtColor(image1,cv2.COLOR_BGR2RGB)

print(image1.dtype)
print(image1.shape)


## converting to grayscale

gray_image = cv2.cvtColor(butterfly,cv2.COLOR_BGR2GRAY) 


## applying canny edge detection


edged_image = cv2.Canny(gray_image, threshold1 = 30, threshold2 = 100)


subplot(1,2,1)
imshow(butterfly)
plt.title('original image')

subplot(1,2,2)
imshow(edged_image)
plt.title('image after applying canny edge detection')

 ## applying prewitt operator for edge detection

prewitt_x = cv2.filter2D(image1, -1, np.array([[-1, 0, 1], [-1, 0, 1], [-1, 0, 1]]))
prewitt_y = cv2.filter2D(image1, -1, np.array([[-1, -1, -1], [0, 0, 0], [1, 1, 1]]))


# ## Combining the edge-detected images prewitt_x and prewitt_y


prewitt_edges = cv2.addWeighted(prewitt_x, 0.5, prewitt_y, 0.5, 0)


subplot(1,2,1)
imshow(butterfly)
plt.title('original image')

subplot(1,2,2)
plt.imshow(prewitt_edges, cmap = 'gray')
plt.title('image after applying prewitt operator')
plt.show()


## Gaussian blur

 ## applying gaussian blur to image


blurred1 = cv2.GaussianBlur(image1, (5, 5), 0)
blurred2 = cv2.GaussianBlur(image1, (9, 9), 0)


## calculating difference of gaussian


dog = blurred1 - blurred2

## Applying a binary thresholding to the DoG image

edges = cv2.threshold(dog, 30, 255, cv2.THRESH_BINARY)

subplot(1,2,1)
imshow(butterfly)
plt.title('original image')

subplot(1,2,2)
plt.imshow(edges, cmap='gray')
plt.title('image after applying gaussion blur')
plt.show()


subplot(2,2,1)
plt.imshow(edged_image, cmap='gray')
plt.title('Canny')
plt.show()

subplot(2,2,3)
imshow(prewitt_edges)
plt.title('Prewitt')

subplot(2,2,4)
plt.imshow(edges, cmap='gray')
plt.title('Gaussion blur')
plt.show()
